<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xynu.mapper.BookLogsMapper">

    <resultMap id="borrowLogsMap" type="com.xynu.entity.BorrowLogs">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="book_id" property="bookId"/>
        <result column="message" property="message"/>
        <result column="create_time" property="createTime"/>
    </resultMap>
    <resultMap id="returnLogsMap" type="com.xynu.entity.ReturnLogs">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="borrow_id" property="borrowId"/>
        <result column="message" property="message"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <resultMap id="StatusMap" type="com.xynu.model.Status">
        <result column="status" property="status"/>
        <result column="num" property="num"/>
    </resultMap>
    <sql id="base_column_list">
        id,user_id,book_id, message
    </sql>
    <sql id="base_table" >
        borrow_logs
    </sql>


    <insert id="insertBorrowLogs" parameterType="com.xynu.entity.BorrowLogs" >
        INSERT INTO
        <include refid="base_table"/>
        (user_id,book_id,message)
        values
        (#{userId,jdbcType=INTEGER},#{bookId,jdbcType=INTEGER},#{message,jdbcType=VARCHAR})
    </insert>

    <insert id="insertReturnLogs" parameterType="com.xynu.entity.BorrowLogs" >
        INSERT INTO
        return_logs
        (borrow_id,message,user_id)
        values
        (#{borrowId,jdbcType=INTEGER},#{message,jdbcType=VARCHAR},#{userId,jdbcType=INTEGER})
    </insert>

    <select id="selectBorrowLogsByUserId" resultMap="borrowLogsMap">
        SELECT *
        FROM
        borrow_logs
        WHERE user_id = #{userId, jdbcType=INTEGER}
    </select>

    <select id="selectReturnLogsByUserId" resultMap="returnLogsMap">
        SELECT *
        FROM
        return_logs
        WHERE user_id = #{userId, jdbcType=INTEGER}
    </select>
    
    <select id="selectBorrowPeopleType" resultMap="StatusMap">
        select count(*) num,if(user.sex = 0, '男', '女') status
        from borrow_logs left join user
        on user.id = borrow_logs.user_id
        group by user.sex

    </select>

    <select id="borrowLogsInWeek" resultMap="StatusMap">
        select count(1) as num ,create_date as status
        from
        (
        select
        left(blog.create_time,10) as create_date
        from
        borrow_logs blog
        where
        <![CDATA[
        DATE_SUB(CURDATE(), INTERVAL 6 DAY) <=left(create_time,10)
        ]]>
        ) t group by create_date

    </select>


    <select id="returnLogsInWeek" resultMap="StatusMap">
        select count(1) as num,create_date as status
        from
        (
        select
        left(r.create_time,10) as create_date
        from
        return_logs r
        where
        <![CDATA[
        DATE_SUB(CURDATE(), INTERVAL 6 DAY) <=left(create_time,10)
        ]]>
        ) t group by create_date
    </select>
</mapper>